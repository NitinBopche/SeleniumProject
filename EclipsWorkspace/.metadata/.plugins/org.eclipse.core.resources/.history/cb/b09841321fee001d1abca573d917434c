package StepDefinitions;


import org.junit.Assert;

import Utilities.BaseClass;
import io.cucumber.java.After;
import io.cucumber.java.Before;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

public class SeleniumFraStepDef extends BaseClass{
	
@Before
public void Before_Scenario() {
BaseClass.setup();
}
@After
public void After_Scenario() {
BaseClass.teardown();
}

	@Given("I lauch auotmation demo website for practice selenium")
	public void i_lauch_auotmation_demo_website_for_practice_selenium() {
		driver.get(prop.getProperty("BaseUrl"));
		System.out.println(prop.getProperty("BaseUrl"));
		//		Thread.sleep(5000);
	}

	@When("I send value in the first name value field")
	public void i_send_value_in_the_first_name_value_field() {
		register.SendKeyUsername();
		//		Thread.sleep(5000);
	}

	@When("I send value in the last name value field")
	public void i_send_value_in_the_last_name_value_field() {
		register.SendKeyLastName();
		//	Thread.sleep(5000);
	}

	@Then("I verify that Full Name title")
	public void GetTextFirstName() {
		String NameUser = register.GetTextFirstName();
		System.out.printf("This is my == ", NameUser);
		Assert.assertEquals("Full Name*", NameUser);
	}
	@When("I click on the AB testing")
	public void i_click_on_the_add_and_remove_elements(){
		register.ClickABTesting();
	}
	@Then("I get text paragraph")
	public void i_get_text_paragraph() {
		String Text = register.GetTextParagraph();
		System.out.println(Text);
	}

	@When("I click on add and remove element")
	public void i_click_on_add_and_remove_element() throws InterruptedException {
		register.ClickAddAndRemoveElement();
		Thread.sleep(2000);
	}

	@When("I click on add element button")
	public void i_click_on_add_element_button() throws InterruptedException {
		register.ClickAddElement();
		Thread.sleep(2000);
	}

	@Then("I verify delete button displayed")
	public void i_verify_delete_button_displayed() {
		boolean Value = register.AddAndRemoveElementIsDisplayed();
		Assert.assertTrue(Value);
	}

	@When("I click on delete button")
	public void i_click_on_delete_button() throws InterruptedException {
		register.ClickDeleteElement();
		Thread.sleep(2000);
	}
	@When("^I click on add element \"(.*)\" times$")
	public void AddFiveDeleteElements(int value) throws InterruptedException{
	for(int i=0; i< value; i++) {
		register.ClickAddElement();
		Thread.sleep(1000);
	}
	}
	@Then("I count number of delete elements present on the web page")
	public void CountDeleteElements(){
		System.out.println(register.CountOfDeleteElement());
		System.out.println("Hello");
	}
	@When("I click on checkboxes link")
	public void CheckboxLink(){
		register.ClickCheckboxes();
	}
	@When("I click on the checkbox1")
	public void ClickCheckB1() throws InterruptedException{
		register.ClickCheckbox1();
		Thread.sleep(5000);
	}
	@When("I verify checkbox is selected")
	public void IsCheckBSelected(){
		boolean value = register.IsCheckbox1Selected();
		Assert.assertTrue(value);
	}
	@When("I get text of all delete elements")
	public void GetTextDeleteElements(){
	register.GetTextOfDeleteElement();
	}
	@Then("I click JSAllert and verify")
	public void Click_JS_Alert(){
	Assert.assertEquals("I am a JS Alert", register.getTextAlert());
	}
	@When("I click on ALert option")
	public void CLick_Alert_Option(){
	register.ClickAlertLink();
	}
	@When("I click on JS  alert")
	public void CLick_JS_Alert(){
	register.ClickJSAlert();
	}
	@When("I click on ok button on alert")
	public void ClickOKButton() throws InterruptedException{
	register.ClickOkButton();
	Thread.sleep(3000);
	}
}
