package Utilities;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.Duration;
import java.util.NoSuchElementException;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.FluentWait;
import org.openqa.selenium.support.ui.Wait;
import org.openqa.selenium.support.ui.WebDriverWait;

import ObjectRepository.AutomationTesting;
import ObjectRepository.Register;
import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseClass {
	public static WebDriver driver;
	public static Properties prop;
	public static Register register;
	public static FrameworkHelper FH;
	public static AutomationTesting AutoTest;
	public static WebDriverWait wait;
	public static Wait<WebDriver> Fluentwait;
	public static void setup()
	{
		String browser = "chrome";
		if(browser == "chrome") {
			
		}
		WebDriverManager.chromedriver().setup();
		ChromeOptions options = new ChromeOptions();
		options.addArguments("--headless");
		driver = new ChromeDriver(options);
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		register = new Register();
		FH = new FrameworkHelper();
		AutoTest = new AutomationTesting();
		wait = new WebDriverWait(driver, Duration.ofSeconds(30));
		Fluentwait = new FluentWait<>(driver)
			    .withTimeout(Duration.ofSeconds(10))
			    .pollingEvery(Duration.ofMillis(500))
			    .ignoring(NoSuchElementException.class);
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(30));
	}

	public static void teardown() 
	{
		driver.quit();
	}

	public BaseClass() 
	{
		try {
			prop = new Properties();
			FileInputStream fis = new FileInputStream("C:\\Users\\Khushi\\Desktop\\Nitin\\EclipsWorkspace\\MyFrame\\Configuration\\config.properties");
			try {
				prop.load(fis);
			} catch (IOException e) {
				e.printStackTrace();
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

}